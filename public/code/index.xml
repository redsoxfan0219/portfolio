<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code on</title><link>https://benbarksdale.netlify.app/code/</link><description>Recent content in Code on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 23 Jun 2022 00:43:21 -0400</lastBuildDate><atom:link href="https://benbarksdale.netlify.app/code/index.xml" rel="self" type="application/rss+xml"/><item><title>Data Dictionary Creator</title><link>https://benbarksdale.netlify.app/code/datadictionarycreator/</link><pubDate>Wed, 22 Jun 2022 22:31:36 -0400</pubDate><guid>https://benbarksdale.netlify.app/code/datadictionarycreator/</guid><description>My first Python package, adamic, is a simple solution for creating data dictionaries.
Installation # The package is available on PyPi and can be downloaded by running the following from the command line:
pip install adamic Use # After installing the package to your environment, import the package to your script, Jupyter notebook, or directly to the python3 command line.
from adamic import adamic To create your data dictionary, pass a Pandas dataframe to the create_data_dictionary() function:</description></item><item><title>Exploratory Data Analysis</title><link>https://benbarksdale.netlify.app/code/exploratorydataanalysis/</link><pubDate>Thu, 23 Jun 2022 01:05:07 -0400</pubDate><guid>https://benbarksdale.netlify.app/code/exploratorydataanalysis/</guid><description>Double-click the README.md in the interactive window for more information.
For other examples of my data science projects, see this GitHub repository.</description></item><item><title>RenText</title><link>https://benbarksdale.netlify.app/code/rentext/</link><pubDate>Wed, 22 Jun 2022 22:31:50 -0400</pubDate><guid>https://benbarksdale.netlify.app/code/rentext/</guid><description>RenText is my ongoing effort to use Python and advanced analytics to analyze Renaissance English texts. The data used in this project is from the Early English Books Online (EEBO) Text Creation Partnership.</description></item><item><title>GitHub Action</title><link>https://benbarksdale.netlify.app/code/githubaction/</link><pubDate>Sun, 16 Oct 2022 12:32:11 -0400</pubDate><guid>https://benbarksdale.netlify.app/code/githubaction/</guid><description>GitHub Actions in Docs-as-Code # Introduction to State Site Generators # The purpose of static site generators is two-fold:
To allow uses to write in a simple, lightweight markup language (typically Markdown or reStructuredText) To render that simple markup text into attractive, stylized HTML files The beauty of static site generators is that, after some initial setup, the process is reduced to a single command line statement, like the one I use to build the HTML for this site on my local machine:</description></item></channel></rss>